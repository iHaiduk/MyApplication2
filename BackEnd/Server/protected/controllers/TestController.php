<?phpclass TestController extends Controller{	/**	 * @var string the default layout for the views. Defaults to '//layouts/column2', meaning	 * using two-column layout. See 'protected/views/layouts/column2.php'.	 */	/**	 * Displays a particular model.	 * @param integer $id the ID of the model to be displayed	 */	public function actionView($id)	{        echo CJSON::encode($this->loadModel($id));	}	/**	 * Creates a new model.	 * If creation is successful, the browser will be redirected to the 'view' page.	 */	public function actionCreate($name)	{		$model=new Test;        $model->name=$name;        echo json_encode(array("result"=>$model->save(), "id"=>$model->id));	}    public function actionAll()    {        $test_arr = array();        $model = Test::model()->findAll();        foreach($model as $val){            $test_arr[] = array(                "id" => $val->id,                "name" => $val->name,                "count" => count($val->question)            );        }        echo json_encode($test_arr);    }	/**	 * Updates a particular model.	 * If update is successful, the browser will be redirected to the 'view' page.	 * @param integer $id the ID of the model to be updated	 */	public function actionResult($id, $answ)	{        $answ = explode(",", substr($answ, 0, -1));        $model=Question::model()->findAllByAttributes(            array("uid_test"=>$id)        );        $count = 0;        foreach($answ as $key=>$val){            if((int)$val == (int)$model[$key]->answtrue)                $count++;        }        echo json_encode(array("answerT"=>$count, "count"=>count($model)));	}	/**	 * Deletes a particular model.	 * If deletion is successful, the browser will be redirected to the 'admin' page.	 * @param integer $id the ID of the model to be deleted	 */	public function actionDelete($id)	{		$this->loadModel($id)->delete();		// if AJAX request (triggered by deletion via admin grid view), we should not redirect the browser		if(!isset($_GET['ajax']))			$this->redirect(isset($_POST['returnUrl']) ? $_POST['returnUrl'] : array('admin'));	}	/**	 * Lists all models.	 */	public function actionIndex()	{		$dataProvider=new CActiveDataProvider('Test');		$this->render('index',array(			'dataProvider'=>$dataProvider,		));	}	/**	 * Manages all models.	 */	public function actionAdmin()	{		$model=new Test('search');		$model->unsetAttributes();  // clear any default values		if(isset($_GET['Test']))			$model->attributes=$_GET['Test'];		$this->render('admin',array(			'model'=>$model,		));	}	/**	 * Returns the data model based on the primary key given in the GET variable.	 * If the data model is not found, an HTTP exception will be raised.	 * @param integer $id the ID of the model to be loaded	 * @return Test the loaded model	 * @throws CHttpException	 */	public function loadModel($id)	{		$model=Test::model()->findByPk($id);		if($model===null)			throw new CHttpException(404,'The requested page does not exist.');		return $model;	}	/**	 * Performs the AJAX validation.	 * @param Test $model the model to be validated	 */	protected function performAjaxValidation($model)	{		if(isset($_POST['ajax']) && $_POST['ajax']==='test-form')		{			echo CActiveForm::validate($model);			Yii::app()->end();		}	}}